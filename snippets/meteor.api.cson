# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#



#===================================================
# HTML / Document Object Model Snippets

'.html':
  'Blaze Template':
    'prefix': 'template'
    'body': '<template name="${1}">\n\t${2}\n</template>',
  'Blaze #each':
    'prefix': '#each'
    'body': '
      {{#each ${1:collections}}}\n\t${2}\n{{/each}}
    ',
  'Blaze #if':
    'prefix': '#if'
    'body': '
      {{#if ${1:statement}}}\n\t${2}\n{{/if}}
    ',
  'Blaze #if else':
    'prefix': '#ife'
    'body': '{{#if ${1:statement}}}\n\t${2}\n{{else}}\n\t${3}\n{{/if}}
    '

#===================================================
# Javascript Lanaguage Snippets


'.js':
  'console.log':
    'prefix': 'log'
    'body': 'console.log(${1:"crash"});\n${2}'

  'function()':
    'prefix': 'f'
    'body': 'function(${1:argument}){\n\t${2}\n},'


'.js':
  'if, else if, else':
    'prefix': 'ieie'
    'body': '
      if (${1:true}) {
        $2
      } else if (${3:false}) {
        $4
      } else {
        $5
      }
    '

#===================================================
# UI Snippets

'.js':
  'Register Helper':
    'prefix': 'register'
    'body': 'UI.registerHelper("${1:helperName}", function(${2:argument}){\n\t${3}\n});',

#===================================================
# Meteor Core API

  'Meteor.isClient':
    'prefix': 'isclient'
    'body': 'if(Meteor.isClient){\n\t${1:}\n}',

  'Meteor.isServer':
    'prefix': 'isserver'
    'body': 'if(Meteor.isServer){\n\t${1:}\n}',

  'Meteor.startup':
    'prefix': 'startup'
    'body': 'Meteor.startup(function(){\n\t${1:}\n});',

  'Meteor.absoluteUrl':
    'prefix': 'absolute'
    'body': 'Meteor.absoluteUrl("${1:}");',


#===================================================
# Publish & Subscribe

  'Meteor Publish':
    'prefix': 'publish'
    'body': 'Meteor.publish("${1:name}", function(${2:argument}){\n\t${3}\n});',

  'Meteor Subscribe':
    'prefix': 'subscribe'
    'body': 'Meteor.subscribe("${1:name}", ${2:argument});',


#===================================================
# Methods

  'Collection Update':
    'prefix': 'update'
    'body': '${1:Collection}.update({_id:${2:idSelector}}, {$set:{\n\t${3}\n}});',

  'Meteor Methods':
    'prefix': 'methods'
    'body': 'Meteor.methods({
      \n\t${1:methodName}:function(){
      \n\t\t${2}
      \n\t}
      \n});',

#===================================================
# Template Snippets

  'Template Rendered':
    'prefix': 'rendered'
    'body': 'Template.${1:name}.rendered = function(){\n\t${2}\n}',
  'Template Events':
      'prefix': 'events'
      'body': '
        Template.${1:name}.events({
        \n\t"click ${2:#event}": function(event, template){
        \n\t\t${3}
        \n\t}
        \n});
      ',
  'Template Created':
    'prefix': 'created'
    'body': '
      Template.${1:name}.created = function(){
      \n\t${2}
      \n};
    ',
  'Template':
    'prefix': 'Template'
    'body': '
      Router.map(function(){
      \n\tthis.route("${1:routeName}", {
      \n\t\tpath: "/${2:route}",
      \n\t\ttemplate: "${3:name}",
      \n\t\tonBeforeAction: function () {
      \n\t\t\tsetPageTitle("${4:Page Title}");
      \n\t\t}
      \n\t});
      \n});
      \n
      \nTemplate.${5:name}.helpers({
      \n\trendered: function(){
      \n\t\t${6}
      \n\t}
      \n});
      \n\nTemplate.${7:name}.events({
      \n\t"${8:click #foo}": function(event, template){
      \n\t\t${9}
      \n\t}
      \n});
    ',
  'Template Helpers':
    'prefix': 'helpers'
    'body': 'Template.${1:name}.helpers({\n\trendered: function(){\n\t\t${2}\n\t}\n});',

#===================================================
# Router Snippets

  'Router':
    'prefix': 'Router'
    'body': '
      Router.map(function(){
      \n\tthis.route("${1:routeName}"{
      \n\t\t${2}
      \n\t});
      \n});
    ',
  'route':
    'prefix': 'route'
    'body': '
      this.route("${1:routeName}"{
      \n\tpath:"${2}",
      \n\ttemplate:"${3}",
      \n\twaitOn:function(){
      \n\t\t${4}
      \n\t},
      \n\tdata:function(){
      \n\t\t${5}
      \n\t},
      \n\tonBeforeAction:function(){
      \n\t\tsetPageTitle("${6}");
      \n\t},
      \n\tonAfterAction:function(){
      \n\t\t${7}
      \n\t},
      \n});
    ',
  'Upsert Route':
    'prefix': 'UpsertRoute'
    'body': '
      Router.map(function(){
        \n\tthis.route("${1:routeName}"{
        \n\t\tpath:"/${2:route}/add",
        \n\t\ttemplate:"${3:routeTemplate}",
        \n\t\twaitOn:function(){
        \n\t\t\t${4}
        \n\t\t},
        \n\t\tdata:function(){
        \n\t\t\treturn {};
        \n\t\t},
        \n\t\tonBeforeAction:function(){
        \n\t\t\tsetPageTitle("${5}");
        \n\t\t},
        \n\t\tonAfterAction:function(){
        \n\t\t\t${6}
        \n\t\t},
        \n\t});

        \n\tthis.route("${7:routeName}"{
        \n\t\tpath:"/${8}/edit/${9:paramId}",
        \n\t\ttemplate:"${10: routeTemplate}",
        \n\t\twaitOn:function(){
        \n\t\t\treturn Meteor.subscribe("${11: subscription}");
        \n\t\t},
        \n\t\tdata:function(){
        \n\t\t\treturn ${12: Collection}.findOne(this.params.${13: paramId});
        \n\t\t},
        \n\t\tonBeforeAction:function(){
        \n\t\t\tsetPageTitle("${14}");
        \n\t\t},
        \n\t\tonAfterAction:function(){
        \n\t\t\t${15}
        \n\t\t},
        \n\t});
      \n});
    ',


#===================================================
# Nightwatch

  'verify.elementPresent':
    'prefix': 'vep'
    'body': '.verify.elementPresent("#${1}"),${2}',

  'verify.elementNotPresent':
    'prefix': 'venp'
    'body': '.verify.elementNotPresent("#${1}"),${2}',

  'waitForElementVisible':
    'prefix': 'wfev'
    'body': '.waitForElementVisible("#${1}", ${2}),${3}',

  'click':
    'prefix': 'click'
    'body': '.click("#${1}").pause(${2}),${3}',

  'attributeEquals':
    'prefix': 'ae'
    'body': '.verify.attributeEquals("#${1}", "value", "${2}"),${3}',




#===================================================
# Stylesheet / View Snippets





'.less':
  'Responsive Stylesheets':
    "prefix": "mobile"
    "body": 'media'
